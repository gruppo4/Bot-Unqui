#comandos de instalacion de python3 en 


#comandos basicos = necesarios para el inicio del bot
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from newsapi import NewsApiClient

#Creamos un archivo env.py para guardar nuestras credenciales
from env import NEWS_API_KEY, BOT_KEY

#Creamos la intefaz con la API de Noticas.
newsapi = NewsApiClient(api_key=NEWS_API_KEY)


def start(update, context):
    # Configuramos el comando start para enviar un mensaje de bienvenida
    update.message.reply_text('Bienvenido, escribe algo para comenzar a buscar noticias.')


def help(update, context):
    # Configuramos el comando help para enviar un mensaje con instrucciones
    update.message.reply_text('Hola escriba algunas palabras clave para empezar a buscar noticias en la web.')


def echo(update, context):
    # Configuramos para enviar un mensaje con el texto que envió el usuario, aquí es donde va a ir toda la lógica de nuestro bot
    update.message.reply_text(update.message.text)


def main():
    # Creamos el Updater y le pasamos el token de nuestro bot. Este se encargará de manejar las peticiones de los usuarios.
    updater = Updater(BOT_TOKEN, use_context=True)

    # Obtenemos el Dispatcher para crear los comandos
    dp = updater.dispatcher

    # Creamos el comando /start y definimos que se ejecute este mismo método
    dp.add_handler(CommandHandler("start", start))
    # Creamos el comando /help y definimos que se ejecute el método help
    dp.add_handler(CommandHandler("help", help))

    # De no ejecutarse ninguno de los anteriores asumimos que el usuario escribió algo y ejecutamos el método echo que nos va a permitir obtener los campos de las búsquedas del usuario
    dp.add_handler(MessageHandler(Filters.text, echo))

    updater.start_polling()

    updater.idle()


if __name__ == '__main__':
    main()

#comandos de preguntas o respuestas- python3

photo = open('/home/lordsergio/Gatito_Feliz.jpg', 'rb') tb.send_photo(chat_id, photo) #enviar foto

doc = open('/home/lordsergio/Documentos/deberes_de_verano.pdf', 'rb') # Es la función equivalente a enviar un archivo desde telegram.

tb.send_document(chat_id, doc) tb.send_message(109556849, 'Disfruta de tu verano ;)')#enviar valores

video = open('/home/lordsergio/Vídeos/Reportaje_sobre_UNIX.mp4', 'rb') # enviar video

tb.send_video(chat_id, video)#enviar video

audio = open('/home/lordsergio/Música/Audios/1.ogg', 'rb') tb.send_audio(chat_id, audio) # audio

sti = open('/tmp/sti.webp', 'rb') tb.send_sticker(chat_id, sti)#sticker

tb.send_location(chat_id, latitud, longitud)# ubicacion 

tb.forward_message(to_chat_id, from_chat_id, message_id)#reenviar mensajes

tb.send_chat_action(chat_id, action_string) # acciones # Están disponibles todas estas acciones typing,upload_photo,record_video,upload_video,record_audio,upload_audio,upload_document,find_location

from telebot import types markup = types.ReplyKeyboardMarkup() markup.add('a', 'v', 'd') tb.send_message(chat_id, message, None, None, markup) # or use row method markup = types.ReplyKeyboardMarkup() markup.row('a', 'v') markup.row('c', 'd', 'e') tb.send_message(chat_id, message, None, None, markup) #crear teclado 

tb.get_me()# comprobar el estado de la api

